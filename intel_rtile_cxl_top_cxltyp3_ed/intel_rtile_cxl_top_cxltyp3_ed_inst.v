	intel_rtile_cxl_top_cxltyp3_ed u0 (
		.refclk4                           (_connected_to_refclk4_),                           //   input,    width = 1,         refclk.clk
		.refclk0                           (_connected_to_refclk0_),                           //   input,    width = 1,        refclk0.clk
		.refclk1                           (_connected_to_refclk1_),                           //   input,    width = 1,        refclk1.clk
		.resetn                            (_connected_to_resetn_),                            //   input,    width = 1,         resetn.reset_n
		.nInit_done                        (_connected_to_nInit_done_),                        //   input,    width = 1,     ninit_done.ninit_done
		.sip_warm_rstn_o                   (_connected_to_sip_warm_rstn_o_),                   //  output,    width = 1,      warm_rstn.reset_n
		.spi_MISO                          (_connected_to_spi_MISO_),                          //   input,    width = 1,            spi.MISO
		.spi_MOSI                          (_connected_to_spi_MOSI_),                          //  output,    width = 1,               .MOSI
		.spi_SCLK                          (_connected_to_spi_SCLK_),                          //  output,    width = 1,               .SCLK
		.spi_SS_n                          (_connected_to_spi_SS_n_),                          //  output,    width = 1,               .SS_n
		.cxl_rx_n                          (_connected_to_cxl_rx_n_),                          //   input,   width = 16,            cxl.rx_n
		.cxl_rx_p                          (_connected_to_cxl_rx_p_),                          //   input,   width = 16,               .rx_p
		.cxl_tx_n                          (_connected_to_cxl_tx_n_),                          //  output,   width = 16,               .tx_n
		.cxl_tx_p                          (_connected_to_cxl_tx_p_),                          //  output,   width = 16,               .tx_p
		.hdm_size_256mb                    (_connected_to_hdm_size_256mb_),                    //   input,   width = 36,        memsize.hdm_size
		.mc2ip_memsize                     (_connected_to_mc2ip_memsize_),                     //   input,   width = 64,               .mem_size
		.ip2hdm_clk                        (_connected_to_ip2hdm_clk_),                        //  output,    width = 1,     ip2hdm_clk.clk
		.ip2hdm_reset_n                    (_connected_to_ip2hdm_reset_n_),                    //  output,    width = 1, ip2hdm_reset_n.reset
		.mc2ip_0_sr_status                 (_connected_to_mc2ip_0_sr_status_),                 //   input,    width = 5,        mc2ip_0.sr_status
		.mc2ip_0_rspfifo_full              (_connected_to_mc2ip_0_rspfifo_full_),              //   input,    width = 1,               .rspfifo_full
		.mc2ip_0_rspfifo_empty             (_connected_to_mc2ip_0_rspfifo_empty_),             //   input,    width = 1,               .rspfifo_empty
		.mc2ip_0_rspfifo_fill_level        (_connected_to_mc2ip_0_rspfifo_fill_level_),        //   input,    width = 6,               .rspfifo_fill_level
		.mc2ip_0_reqfifo_full              (_connected_to_mc2ip_0_reqfifo_full_),              //   input,    width = 1,               .reqfifo_full
		.mc2ip_0_reqfifo_empty             (_connected_to_mc2ip_0_reqfifo_empty_),             //   input,    width = 1,               .reqfifo_empty
		.mc2ip_0_reqfifo_fill_level        (_connected_to_mc2ip_0_reqfifo_fill_level_),        //   input,    width = 6,               .reqfifo_fill_level
		.hdm2ip_avmm0_ready                (_connected_to_hdm2ip_avmm0_ready_),                //   input,    width = 1,   hdm2ip_avmm0.ready
		.hdm2ip_avmm0_cxlmem_ready         (_connected_to_hdm2ip_avmm0_cxlmem_ready_),         //   input,    width = 1,               .cxlmem_ready
		.hdm2ip_avmm0_readdata             (_connected_to_hdm2ip_avmm0_readdata_),             //   input,  width = 512,               .readdata
		.hdm2ip_avmm0_rsp_mdata            (_connected_to_hdm2ip_avmm0_rsp_mdata_),            //   input,   width = 14,               .rsp_mdata
		.hdm2ip_avmm0_read_poison          (_connected_to_hdm2ip_avmm0_read_poison_),          //   input,    width = 1,               .read_poison
		.hdm2ip_avmm0_readdatavalid        (_connected_to_hdm2ip_avmm0_readdatavalid_),        //   input,    width = 1,               .readdatavalid
		.hdm2ip_avmm0_ecc_err_corrected    (_connected_to_hdm2ip_avmm0_ecc_err_corrected_),    //   input,    width = 8,               .ecc_err_corrected
		.hdm2ip_avmm0_ecc_err_detected     (_connected_to_hdm2ip_avmm0_ecc_err_detected_),     //   input,    width = 8,               .ecc_err_detected
		.hdm2ip_avmm0_ecc_err_fatal        (_connected_to_hdm2ip_avmm0_ecc_err_fatal_),        //   input,    width = 8,               .ecc_err_fatal
		.hdm2ip_avmm0_ecc_err_syn_e        (_connected_to_hdm2ip_avmm0_ecc_err_syn_e_),        //   input,    width = 8,               .ecc_err_syn_e
		.hdm2ip_avmm0_ecc_err_valid        (_connected_to_hdm2ip_avmm0_ecc_err_valid_),        //   input,    width = 1,               .ecc_err_valid
		.ip2hdm_avmm0_read                 (_connected_to_ip2hdm_avmm0_read_),                 //  output,    width = 1,   ip2hdm_avmm0.read
		.ip2hdm_avmm0_write                (_connected_to_ip2hdm_avmm0_write_),                //  output,    width = 1,               .write
		.ip2hdm_avmm0_write_poison         (_connected_to_ip2hdm_avmm0_write_poison_),         //  output,    width = 1,               .write_poison
		.ip2hdm_avmm0_write_ras_sbe        (_connected_to_ip2hdm_avmm0_write_ras_sbe_),        //  output,    width = 1,               .write_ras_sbe
		.ip2hdm_avmm0_write_ras_dbe        (_connected_to_ip2hdm_avmm0_write_ras_dbe_),        //  output,    width = 1,               .write_ras_dbe
		.ip2hdm_avmm0_writedata            (_connected_to_ip2hdm_avmm0_writedata_),            //  output,  width = 512,               .writedata
		.ip2hdm_avmm0_byteenable           (_connected_to_ip2hdm_avmm0_byteenable_),           //  output,   width = 64,               .byteenable
		.ip2hdm_avmm0_address              (_connected_to_ip2hdm_avmm0_address_),              //  output,   width = 46,               .address
		.ip2hdm_avmm0_req_mdata            (_connected_to_ip2hdm_avmm0_req_mdata_),            //  output,   width = 14,               .req_mdata
		.mc2ip_1_sr_status                 (_connected_to_mc2ip_1_sr_status_),                 //   input,    width = 5,        mc2ip_1.sr_status
		.mc2ip_1_rspfifo_full              (_connected_to_mc2ip_1_rspfifo_full_),              //   input,    width = 1,               .rspfifo_full
		.mc2ip_1_rspfifo_empty             (_connected_to_mc2ip_1_rspfifo_empty_),             //   input,    width = 1,               .rspfifo_empty
		.mc2ip_1_rspfifo_fill_level        (_connected_to_mc2ip_1_rspfifo_fill_level_),        //   input,    width = 6,               .rspfifo_fill_level
		.mc2ip_1_reqfifo_full              (_connected_to_mc2ip_1_reqfifo_full_),              //   input,    width = 1,               .reqfifo_full
		.mc2ip_1_reqfifo_empty             (_connected_to_mc2ip_1_reqfifo_empty_),             //   input,    width = 1,               .reqfifo_empty
		.mc2ip_1_reqfifo_fill_level        (_connected_to_mc2ip_1_reqfifo_fill_level_),        //   input,    width = 6,               .reqfifo_fill_level
		.hdm2ip_avmm1_ready                (_connected_to_hdm2ip_avmm1_ready_),                //   input,    width = 1,   hdm2ip_avmm1.ready
		.hdm2ip_avmm1_cxlmem_ready         (_connected_to_hdm2ip_avmm1_cxlmem_ready_),         //   input,    width = 1,               .cxlmem_ready
		.hdm2ip_avmm1_readdata             (_connected_to_hdm2ip_avmm1_readdata_),             //   input,  width = 512,               .readdata
		.hdm2ip_avmm1_rsp_mdata            (_connected_to_hdm2ip_avmm1_rsp_mdata_),            //   input,   width = 14,               .rsp_mdata
		.hdm2ip_avmm1_read_poison          (_connected_to_hdm2ip_avmm1_read_poison_),          //   input,    width = 1,               .read_poison
		.hdm2ip_avmm1_readdatavalid        (_connected_to_hdm2ip_avmm1_readdatavalid_),        //   input,    width = 1,               .readdatavalid
		.hdm2ip_avmm1_ecc_err_corrected    (_connected_to_hdm2ip_avmm1_ecc_err_corrected_),    //   input,    width = 8,               .ecc_err_corrected
		.hdm2ip_avmm1_ecc_err_detected     (_connected_to_hdm2ip_avmm1_ecc_err_detected_),     //   input,    width = 8,               .ecc_err_detected
		.hdm2ip_avmm1_ecc_err_fatal        (_connected_to_hdm2ip_avmm1_ecc_err_fatal_),        //   input,    width = 8,               .ecc_err_fatal
		.hdm2ip_avmm1_ecc_err_syn_e        (_connected_to_hdm2ip_avmm1_ecc_err_syn_e_),        //   input,    width = 8,               .ecc_err_syn_e
		.hdm2ip_avmm1_ecc_err_valid        (_connected_to_hdm2ip_avmm1_ecc_err_valid_),        //   input,    width = 1,               .ecc_err_valid
		.ip2hdm_avmm1_read                 (_connected_to_ip2hdm_avmm1_read_),                 //  output,    width = 1,   ip2hdm_avmm1.read
		.ip2hdm_avmm1_write                (_connected_to_ip2hdm_avmm1_write_),                //  output,    width = 1,               .write
		.ip2hdm_avmm1_write_poison         (_connected_to_ip2hdm_avmm1_write_poison_),         //  output,    width = 1,               .write_poison
		.ip2hdm_avmm1_write_ras_sbe        (_connected_to_ip2hdm_avmm1_write_ras_sbe_),        //  output,    width = 1,               .write_ras_sbe
		.ip2hdm_avmm1_write_ras_dbe        (_connected_to_ip2hdm_avmm1_write_ras_dbe_),        //  output,    width = 1,               .write_ras_dbe
		.ip2hdm_avmm1_writedata            (_connected_to_ip2hdm_avmm1_writedata_),            //  output,  width = 512,               .writedata
		.ip2hdm_avmm1_byteenable           (_connected_to_ip2hdm_avmm1_byteenable_),           //  output,   width = 64,               .byteenable
		.ip2hdm_avmm1_address              (_connected_to_ip2hdm_avmm1_address_),              //  output,   width = 46,               .address
		.ip2hdm_avmm1_req_mdata            (_connected_to_ip2hdm_avmm1_req_mdata_),            //  output,   width = 14,               .req_mdata
		.ip2csr_avmm_clk                   (_connected_to_ip2csr_avmm_clk_),                   //  output,    width = 1,         ip2csr.clock
		.ip2csr_avmm_rstn                  (_connected_to_ip2csr_avmm_rstn_),                  //  output,    width = 1,               .reset_n
		.csr2ip_avmm_waitrequest           (_connected_to_csr2ip_avmm_waitrequest_),           //   input,    width = 1,               .waitrequest
		.csr2ip_avmm_readdata              (_connected_to_csr2ip_avmm_readdata_),              //   input,   width = 32,               .readdata
		.csr2ip_avmm_readdatavalid         (_connected_to_csr2ip_avmm_readdatavalid_),         //   input,    width = 1,               .readdatavalid
		.ip2csr_avmm_writedata             (_connected_to_ip2csr_avmm_writedata_),             //  output,   width = 32,               .writedata
		.ip2csr_avmm_address               (_connected_to_ip2csr_avmm_address_),               //  output,   width = 22,               .address
		.ip2csr_avmm_write                 (_connected_to_ip2csr_avmm_write_),                 //  output,    width = 1,               .write
		.ip2csr_avmm_read                  (_connected_to_ip2csr_avmm_read_),                  //  output,    width = 1,               .read
		.ip2csr_avmm_byteenable            (_connected_to_ip2csr_avmm_byteenable_),            //  output,    width = 4,               .byteenable
		.ip2uio_tx_ready                   (_connected_to_ip2uio_tx_ready_),                   //  output,    width = 1,     usr_tx_st0.ready
		.uio2ip_tx_st0_dvalid              (_connected_to_uio2ip_tx_st0_dvalid_),              //   input,    width = 1,               .dvalid
		.uio2ip_tx_st0_sop                 (_connected_to_uio2ip_tx_st0_sop_),                 //   input,    width = 1,               .sop
		.uio2ip_tx_st0_eop                 (_connected_to_uio2ip_tx_st0_eop_),                 //   input,    width = 1,               .eop
		.uio2ip_tx_st0_passthrough         (_connected_to_uio2ip_tx_st0_passthrough_),         //   input,    width = 1,               .passthrough
		.uio2ip_tx_st0_data                (_connected_to_uio2ip_tx_st0_data_),                //   input,  width = 256,               .data
		.uio2ip_tx_st0_data_parity         (_connected_to_uio2ip_tx_st0_data_parity_),         //   input,    width = 8,               .data_parity
		.uio2ip_tx_st0_hdr                 (_connected_to_uio2ip_tx_st0_hdr_),                 //   input,  width = 128,               .hdr
		.uio2ip_tx_st0_hdr_parity          (_connected_to_uio2ip_tx_st0_hdr_parity_),          //   input,    width = 4,               .hdr_parity
		.uio2ip_tx_st0_hvalid              (_connected_to_uio2ip_tx_st0_hvalid_),              //   input,    width = 1,               .hvalid
		.uio2ip_tx_st0_prefix              (_connected_to_uio2ip_tx_st0_prefix_),              //   input,   width = 32,               .prefix
		.uio2ip_tx_st0_prefix_parity       (_connected_to_uio2ip_tx_st0_prefix_parity_),       //   input,    width = 1,               .prefix_parity
		.uio2ip_tx_st0_RSSAI_prefix        (_connected_to_uio2ip_tx_st0_RSSAI_prefix_),        //   input,   width = 12,               .RSSAI_prefix
		.uio2ip_tx_st0_RSSAI_prefix_parity (_connected_to_uio2ip_tx_st0_RSSAI_prefix_parity_), //   input,    width = 1,               .RSSAI_prefix_parity
		.uio2ip_tx_st0_pvalid              (_connected_to_uio2ip_tx_st0_pvalid_),              //   input,    width = 2,               .pvalid
		.uio2ip_tx_st0_vfactive            (_connected_to_uio2ip_tx_st0_vfactive_),            //   input,    width = 1,               .vfactive
		.uio2ip_tx_st0_vfnum               (_connected_to_uio2ip_tx_st0_vfnum_),               //   input,   width = 11,               .vfnum
		.uio2ip_tx_st0_pfnum               (_connected_to_uio2ip_tx_st0_pfnum_),               //   input,    width = 3,               .pfnum
		.uio2ip_tx_st0_chnum               (_connected_to_uio2ip_tx_st0_chnum_),               //   input,    width = 1,               .chnum
		.uio2ip_tx_st0_empty               (_connected_to_uio2ip_tx_st0_empty_),               //   input,    width = 3,               .empty
		.uio2ip_tx_st0_misc_parity         (_connected_to_uio2ip_tx_st0_misc_parity_),         //   input,    width = 1,               .misc_parity
		.uio2ip_tx_st1_dvalid              (_connected_to_uio2ip_tx_st1_dvalid_),              //   input,    width = 1,     usr_tx_st1.dvalid
		.uio2ip_tx_st1_sop                 (_connected_to_uio2ip_tx_st1_sop_),                 //   input,    width = 1,               .sop
		.uio2ip_tx_st1_eop                 (_connected_to_uio2ip_tx_st1_eop_),                 //   input,    width = 1,               .eop
		.uio2ip_tx_st1_passthrough         (_connected_to_uio2ip_tx_st1_passthrough_),         //   input,    width = 1,               .passthrough
		.uio2ip_tx_st1_data                (_connected_to_uio2ip_tx_st1_data_),                //   input,  width = 256,               .data
		.uio2ip_tx_st1_data_parity         (_connected_to_uio2ip_tx_st1_data_parity_),         //   input,    width = 8,               .data_parity
		.uio2ip_tx_st1_hdr                 (_connected_to_uio2ip_tx_st1_hdr_),                 //   input,  width = 128,               .hdr
		.uio2ip_tx_st1_hdr_parity          (_connected_to_uio2ip_tx_st1_hdr_parity_),          //   input,    width = 4,               .hdr_parity
		.uio2ip_tx_st1_hvalid              (_connected_to_uio2ip_tx_st1_hvalid_),              //   input,    width = 1,               .hvalid
		.uio2ip_tx_st1_prefix              (_connected_to_uio2ip_tx_st1_prefix_),              //   input,   width = 32,               .prefix
		.uio2ip_tx_st1_prefix_parity       (_connected_to_uio2ip_tx_st1_prefix_parity_),       //   input,    width = 1,               .prefix_parity
		.uio2ip_tx_st1_RSSAI_prefix        (_connected_to_uio2ip_tx_st1_RSSAI_prefix_),        //   input,   width = 12,               .RSSAI_prefix
		.uio2ip_tx_st1_RSSAI_prefix_parity (_connected_to_uio2ip_tx_st1_RSSAI_prefix_parity_), //   input,    width = 1,               .RSSAI_prefix_parity
		.uio2ip_tx_st1_pvalid              (_connected_to_uio2ip_tx_st1_pvalid_),              //   input,    width = 2,               .pvalid
		.uio2ip_tx_st1_vfactive            (_connected_to_uio2ip_tx_st1_vfactive_),            //   input,    width = 1,               .vfactive
		.uio2ip_tx_st1_vfnum               (_connected_to_uio2ip_tx_st1_vfnum_),               //   input,   width = 11,               .vfnum
		.uio2ip_tx_st1_pfnum               (_connected_to_uio2ip_tx_st1_pfnum_),               //   input,    width = 3,               .pfnum
		.uio2ip_tx_st1_chnum               (_connected_to_uio2ip_tx_st1_chnum_),               //   input,    width = 1,               .chnum
		.uio2ip_tx_st1_empty               (_connected_to_uio2ip_tx_st1_empty_),               //   input,    width = 3,               .empty
		.uio2ip_tx_st1_misc_parity         (_connected_to_uio2ip_tx_st1_misc_parity_),         //   input,    width = 1,               .misc_parity
		.uio2ip_tx_st2_dvalid              (_connected_to_uio2ip_tx_st2_dvalid_),              //   input,    width = 1,     usr_tx_st2.dvalid
		.uio2ip_tx_st2_sop                 (_connected_to_uio2ip_tx_st2_sop_),                 //   input,    width = 1,               .sop
		.uio2ip_tx_st2_eop                 (_connected_to_uio2ip_tx_st2_eop_),                 //   input,    width = 1,               .eop
		.uio2ip_tx_st2_passthrough         (_connected_to_uio2ip_tx_st2_passthrough_),         //   input,    width = 1,               .passthrough
		.uio2ip_tx_st2_data                (_connected_to_uio2ip_tx_st2_data_),                //   input,  width = 256,               .data
		.uio2ip_tx_st2_data_parity         (_connected_to_uio2ip_tx_st2_data_parity_),         //   input,    width = 8,               .data_parity
		.uio2ip_tx_st2_hdr                 (_connected_to_uio2ip_tx_st2_hdr_),                 //   input,  width = 128,               .hdr
		.uio2ip_tx_st2_hdr_parity          (_connected_to_uio2ip_tx_st2_hdr_parity_),          //   input,    width = 4,               .hdr_parity
		.uio2ip_tx_st2_hvalid              (_connected_to_uio2ip_tx_st2_hvalid_),              //   input,    width = 1,               .hvalid
		.uio2ip_tx_st2_prefix              (_connected_to_uio2ip_tx_st2_prefix_),              //   input,   width = 32,               .prefix
		.uio2ip_tx_st2_prefix_parity       (_connected_to_uio2ip_tx_st2_prefix_parity_),       //   input,    width = 1,               .prefix_parity
		.uio2ip_tx_st2_RSSAI_prefix        (_connected_to_uio2ip_tx_st2_RSSAI_prefix_),        //   input,   width = 12,               .RSSAI_prefix
		.uio2ip_tx_st2_RSSAI_prefix_parity (_connected_to_uio2ip_tx_st2_RSSAI_prefix_parity_), //   input,    width = 1,               .RSSAI_prefix_parity
		.uio2ip_tx_st2_pvalid              (_connected_to_uio2ip_tx_st2_pvalid_),              //   input,    width = 2,               .pvalid
		.uio2ip_tx_st2_vfactive            (_connected_to_uio2ip_tx_st2_vfactive_),            //   input,    width = 1,               .vfactive
		.uio2ip_tx_st2_vfnum               (_connected_to_uio2ip_tx_st2_vfnum_),               //   input,   width = 11,               .vfnum
		.uio2ip_tx_st2_pfnum               (_connected_to_uio2ip_tx_st2_pfnum_),               //   input,    width = 3,               .pfnum
		.uio2ip_tx_st2_chnum               (_connected_to_uio2ip_tx_st2_chnum_),               //   input,    width = 1,               .chnum
		.uio2ip_tx_st2_empty               (_connected_to_uio2ip_tx_st2_empty_),               //   input,    width = 3,               .empty
		.uio2ip_tx_st2_misc_parity         (_connected_to_uio2ip_tx_st2_misc_parity_),         //   input,    width = 1,               .misc_parity
		.uio2ip_tx_st3_dvalid              (_connected_to_uio2ip_tx_st3_dvalid_),              //   input,    width = 1,     usr_tx_st3.dvalid
		.uio2ip_tx_st3_sop                 (_connected_to_uio2ip_tx_st3_sop_),                 //   input,    width = 1,               .sop
		.uio2ip_tx_st3_eop                 (_connected_to_uio2ip_tx_st3_eop_),                 //   input,    width = 1,               .eop
		.uio2ip_tx_st3_passthrough         (_connected_to_uio2ip_tx_st3_passthrough_),         //   input,    width = 1,               .passthrough
		.uio2ip_tx_st3_data                (_connected_to_uio2ip_tx_st3_data_),                //   input,  width = 256,               .data
		.uio2ip_tx_st3_data_parity         (_connected_to_uio2ip_tx_st3_data_parity_),         //   input,    width = 8,               .data_parity
		.uio2ip_tx_st3_hdr                 (_connected_to_uio2ip_tx_st3_hdr_),                 //   input,  width = 128,               .hdr
		.uio2ip_tx_st3_hdr_parity          (_connected_to_uio2ip_tx_st3_hdr_parity_),          //   input,    width = 4,               .hdr_parity
		.uio2ip_tx_st3_hvalid              (_connected_to_uio2ip_tx_st3_hvalid_),              //   input,    width = 1,               .hvalid
		.uio2ip_tx_st3_prefix              (_connected_to_uio2ip_tx_st3_prefix_),              //   input,   width = 32,               .prefix
		.uio2ip_tx_st3_prefix_parity       (_connected_to_uio2ip_tx_st3_prefix_parity_),       //   input,    width = 1,               .prefix_parity
		.uio2ip_tx_st3_RSSAI_prefix        (_connected_to_uio2ip_tx_st3_RSSAI_prefix_),        //   input,   width = 12,               .RSSAI_prefix
		.uio2ip_tx_st3_RSSAI_prefix_parity (_connected_to_uio2ip_tx_st3_RSSAI_prefix_parity_), //   input,    width = 1,               .RSSAI_prefix_parity
		.uio2ip_tx_st3_pvalid              (_connected_to_uio2ip_tx_st3_pvalid_),              //   input,    width = 2,               .pvalid
		.uio2ip_tx_st3_vfactive            (_connected_to_uio2ip_tx_st3_vfactive_),            //   input,    width = 1,               .vfactive
		.uio2ip_tx_st3_vfnum               (_connected_to_uio2ip_tx_st3_vfnum_),               //   input,   width = 11,               .vfnum
		.uio2ip_tx_st3_pfnum               (_connected_to_uio2ip_tx_st3_pfnum_),               //   input,    width = 3,               .pfnum
		.uio2ip_tx_st3_chnum               (_connected_to_uio2ip_tx_st3_chnum_),               //   input,    width = 1,               .chnum
		.uio2ip_tx_st3_empty               (_connected_to_uio2ip_tx_st3_empty_),               //   input,    width = 3,               .empty
		.uio2ip_tx_st3_misc_parity         (_connected_to_uio2ip_tx_st3_misc_parity_),         //   input,    width = 1,               .misc_parity
		.ip2uio_tx_st_Hcrdt_update         (_connected_to_ip2uio_tx_st_Hcrdt_update_),         //  output,    width = 3,      usr_tx_st.Hcrdt_update
		.ip2uio_tx_st_Hcrdt_ch             (_connected_to_ip2uio_tx_st_Hcrdt_ch_),             //  output,    width = 1,               .Hcrdt_ch
		.ip2uio_tx_st_Hcrdt_update_cnt     (_connected_to_ip2uio_tx_st_Hcrdt_update_cnt_),     //  output,    width = 6,               .Hcrdt_update_cnt
		.ip2uio_tx_st_Hcrdt_init           (_connected_to_ip2uio_tx_st_Hcrdt_init_),           //  output,    width = 3,               .Hcrdt_init
		.uio2ip_tx_st_Hcrdt_init_ack       (_connected_to_uio2ip_tx_st_Hcrdt_init_ack_),       //   input,    width = 3,               .Hcrdt_init_ack
		.ip2uio_tx_st_Dcrdt_update         (_connected_to_ip2uio_tx_st_Dcrdt_update_),         //  output,    width = 3,               .Dcrdt_update
		.ip2uio_tx_st_Dcrdt_ch             (_connected_to_ip2uio_tx_st_Dcrdt_ch_),             //  output,    width = 1,               .Dcrdt_ch
		.ip2uio_tx_st_Dcrdt_update_cnt     (_connected_to_ip2uio_tx_st_Dcrdt_update_cnt_),     //  output,   width = 12,               .Dcrdt_update_cnt
		.ip2uio_tx_st_Dcrdt_init           (_connected_to_ip2uio_tx_st_Dcrdt_init_),           //  output,    width = 3,               .Dcrdt_init
		.uio2ip_tx_st_Dcrdt_init_ack       (_connected_to_uio2ip_tx_st_Dcrdt_init_ack_),       //   input,    width = 3,               .Dcrdt_init_ack
		.ip2uio_rx_st0_dvalid              (_connected_to_ip2uio_rx_st0_dvalid_),              //  output,    width = 1,    usr_rx_st_0.dvalid
		.ip2uio_rx_st0_sop                 (_connected_to_ip2uio_rx_st0_sop_),                 //  output,    width = 1,               .sop
		.ip2uio_rx_st0_eop                 (_connected_to_ip2uio_rx_st0_eop_),                 //  output,    width = 1,               .eop
		.ip2uio_rx_st0_passthrough         (_connected_to_ip2uio_rx_st0_passthrough_),         //  output,    width = 1,               .passthrough
		.ip2uio_rx_st0_data                (_connected_to_ip2uio_rx_st0_data_),                //  output,  width = 256,               .data
		.ip2uio_rx_st0_data_parity         (_connected_to_ip2uio_rx_st0_data_parity_),         //  output,    width = 8,               .data_parity
		.ip2uio_rx_st0_hdr                 (_connected_to_ip2uio_rx_st0_hdr_),                 //  output,  width = 128,               .hdr
		.ip2uio_rx_st0_hdr_parity          (_connected_to_ip2uio_rx_st0_hdr_parity_),          //  output,    width = 4,               .hdr_parity
		.ip2uio_rx_st0_hvalid              (_connected_to_ip2uio_rx_st0_hvalid_),              //  output,    width = 1,               .hvalid
		.ip2uio_rx_st0_prefix              (_connected_to_ip2uio_rx_st0_prefix_),              //  output,   width = 32,               .prefix
		.ip2uio_rx_st0_prefix_parity       (_connected_to_ip2uio_rx_st0_prefix_parity_),       //  output,    width = 1,               .prefix_parity
		.ip2uio_rx_st0_RSSAI_prefix        (_connected_to_ip2uio_rx_st0_RSSAI_prefix_),        //  output,   width = 12,               .RSSAI_prefix
		.ip2uio_rx_st0_RSSAI_prefix_parity (_connected_to_ip2uio_rx_st0_RSSAI_prefix_parity_), //  output,    width = 1,               .RSSAI_prefix_parity
		.ip2uio_rx_st0_pvalid              (_connected_to_ip2uio_rx_st0_pvalid_),              //  output,    width = 2,               .pvalid
		.ip2uio_rx_st0_bar                 (_connected_to_ip2uio_rx_st0_bar_),                 //  output,    width = 3,               .bar
		.ip2uio_rx_st0_vfactive            (_connected_to_ip2uio_rx_st0_vfactive_),            //  output,    width = 1,               .vfactive
		.ip2uio_rx_st0_vfnum               (_connected_to_ip2uio_rx_st0_vfnum_),               //  output,   width = 11,               .vfnum
		.ip2uio_rx_st0_pfnum               (_connected_to_ip2uio_rx_st0_pfnum_),               //  output,    width = 3,               .pfnum
		.ip2uio_rx_st0_chnum               (_connected_to_ip2uio_rx_st0_chnum_),               //  output,    width = 1,               .chnum
		.ip2uio_rx_st0_misc_parity         (_connected_to_ip2uio_rx_st0_misc_parity_),         //  output,    width = 1,               .misc_parity
		.ip2uio_rx_st0_empty               (_connected_to_ip2uio_rx_st0_empty_),               //  output,    width = 3,               .empty
		.ip2uio_rx_st1_dvalid              (_connected_to_ip2uio_rx_st1_dvalid_),              //  output,    width = 1,    usr_rx_st_1.dvalid
		.ip2uio_rx_st1_sop                 (_connected_to_ip2uio_rx_st1_sop_),                 //  output,    width = 1,               .sop
		.ip2uio_rx_st1_eop                 (_connected_to_ip2uio_rx_st1_eop_),                 //  output,    width = 1,               .eop
		.ip2uio_rx_st1_passthrough         (_connected_to_ip2uio_rx_st1_passthrough_),         //  output,    width = 1,               .passthrough
		.ip2uio_rx_st1_data                (_connected_to_ip2uio_rx_st1_data_),                //  output,  width = 256,               .data
		.ip2uio_rx_st1_data_parity         (_connected_to_ip2uio_rx_st1_data_parity_),         //  output,    width = 8,               .data_parity
		.ip2uio_rx_st1_hdr                 (_connected_to_ip2uio_rx_st1_hdr_),                 //  output,  width = 128,               .hdr
		.ip2uio_rx_st1_hdr_parity          (_connected_to_ip2uio_rx_st1_hdr_parity_),          //  output,    width = 4,               .hdr_parity
		.ip2uio_rx_st1_hvalid              (_connected_to_ip2uio_rx_st1_hvalid_),              //  output,    width = 1,               .hvalid
		.ip2uio_rx_st1_prefix              (_connected_to_ip2uio_rx_st1_prefix_),              //  output,   width = 32,               .prefix
		.ip2uio_rx_st1_prefix_parity       (_connected_to_ip2uio_rx_st1_prefix_parity_),       //  output,    width = 1,               .prefix_parity
		.ip2uio_rx_st1_RSSAI_prefix        (_connected_to_ip2uio_rx_st1_RSSAI_prefix_),        //  output,   width = 12,               .RSSAI_prefix
		.ip2uio_rx_st1_RSSAI_prefix_parity (_connected_to_ip2uio_rx_st1_RSSAI_prefix_parity_), //  output,    width = 1,               .RSSAI_prefix_parity
		.ip2uio_rx_st1_pvalid              (_connected_to_ip2uio_rx_st1_pvalid_),              //  output,    width = 2,               .pvalid
		.ip2uio_rx_st1_bar                 (_connected_to_ip2uio_rx_st1_bar_),                 //  output,    width = 3,               .bar
		.ip2uio_rx_st1_vfactive            (_connected_to_ip2uio_rx_st1_vfactive_),            //  output,    width = 1,               .vfactive
		.ip2uio_rx_st1_vfnum               (_connected_to_ip2uio_rx_st1_vfnum_),               //  output,   width = 11,               .vfnum
		.ip2uio_rx_st1_pfnum               (_connected_to_ip2uio_rx_st1_pfnum_),               //  output,    width = 3,               .pfnum
		.ip2uio_rx_st1_chnum               (_connected_to_ip2uio_rx_st1_chnum_),               //  output,    width = 1,               .chnum
		.ip2uio_rx_st1_misc_parity         (_connected_to_ip2uio_rx_st1_misc_parity_),         //  output,    width = 1,               .misc_parity
		.ip2uio_rx_st1_empty               (_connected_to_ip2uio_rx_st1_empty_),               //  output,    width = 3,               .empty
		.ip2uio_rx_st2_dvalid              (_connected_to_ip2uio_rx_st2_dvalid_),              //  output,    width = 1,    usr_rx_st_2.dvalid
		.ip2uio_rx_st2_sop                 (_connected_to_ip2uio_rx_st2_sop_),                 //  output,    width = 1,               .sop
		.ip2uio_rx_st2_eop                 (_connected_to_ip2uio_rx_st2_eop_),                 //  output,    width = 1,               .eop
		.ip2uio_rx_st2_passthrough         (_connected_to_ip2uio_rx_st2_passthrough_),         //  output,    width = 1,               .passthrough
		.ip2uio_rx_st2_data                (_connected_to_ip2uio_rx_st2_data_),                //  output,  width = 256,               .data
		.ip2uio_rx_st2_data_parity         (_connected_to_ip2uio_rx_st2_data_parity_),         //  output,    width = 8,               .data_parity
		.ip2uio_rx_st2_hdr                 (_connected_to_ip2uio_rx_st2_hdr_),                 //  output,  width = 128,               .hdr
		.ip2uio_rx_st2_hdr_parity          (_connected_to_ip2uio_rx_st2_hdr_parity_),          //  output,    width = 4,               .hdr_parity
		.ip2uio_rx_st2_hvalid              (_connected_to_ip2uio_rx_st2_hvalid_),              //  output,    width = 1,               .hvalid
		.ip2uio_rx_st2_prefix              (_connected_to_ip2uio_rx_st2_prefix_),              //  output,   width = 32,               .prefix
		.ip2uio_rx_st2_prefix_parity       (_connected_to_ip2uio_rx_st2_prefix_parity_),       //  output,    width = 1,               .prefix_parity
		.ip2uio_rx_st2_RSSAI_prefix        (_connected_to_ip2uio_rx_st2_RSSAI_prefix_),        //  output,   width = 12,               .RSSAI_prefix
		.ip2uio_rx_st2_RSSAI_prefix_parity (_connected_to_ip2uio_rx_st2_RSSAI_prefix_parity_), //  output,    width = 1,               .RSSAI_prefix_parity
		.ip2uio_rx_st2_pvalid              (_connected_to_ip2uio_rx_st2_pvalid_),              //  output,    width = 2,               .pvalid
		.ip2uio_rx_st2_bar                 (_connected_to_ip2uio_rx_st2_bar_),                 //  output,    width = 3,               .bar
		.ip2uio_rx_st2_vfactive            (_connected_to_ip2uio_rx_st2_vfactive_),            //  output,    width = 1,               .vfactive
		.ip2uio_rx_st2_vfnum               (_connected_to_ip2uio_rx_st2_vfnum_),               //  output,   width = 11,               .vfnum
		.ip2uio_rx_st2_pfnum               (_connected_to_ip2uio_rx_st2_pfnum_),               //  output,    width = 3,               .pfnum
		.ip2uio_rx_st2_chnum               (_connected_to_ip2uio_rx_st2_chnum_),               //  output,    width = 1,               .chnum
		.ip2uio_rx_st2_misc_parity         (_connected_to_ip2uio_rx_st2_misc_parity_),         //  output,    width = 1,               .misc_parity
		.ip2uio_rx_st2_empty               (_connected_to_ip2uio_rx_st2_empty_),               //  output,    width = 3,               .empty
		.ip2uio_rx_st3_dvalid              (_connected_to_ip2uio_rx_st3_dvalid_),              //  output,    width = 1,    usr_rx_st_3.dvalid
		.ip2uio_rx_st3_sop                 (_connected_to_ip2uio_rx_st3_sop_),                 //  output,    width = 1,               .sop
		.ip2uio_rx_st3_eop                 (_connected_to_ip2uio_rx_st3_eop_),                 //  output,    width = 1,               .eop
		.ip2uio_rx_st3_passthrough         (_connected_to_ip2uio_rx_st3_passthrough_),         //  output,    width = 1,               .passthrough
		.ip2uio_rx_st3_data                (_connected_to_ip2uio_rx_st3_data_),                //  output,  width = 256,               .data
		.ip2uio_rx_st3_data_parity         (_connected_to_ip2uio_rx_st3_data_parity_),         //  output,    width = 8,               .data_parity
		.ip2uio_rx_st3_hdr                 (_connected_to_ip2uio_rx_st3_hdr_),                 //  output,  width = 128,               .hdr
		.ip2uio_rx_st3_hdr_parity          (_connected_to_ip2uio_rx_st3_hdr_parity_),          //  output,    width = 4,               .hdr_parity
		.ip2uio_rx_st3_hvalid              (_connected_to_ip2uio_rx_st3_hvalid_),              //  output,    width = 1,               .hvalid
		.ip2uio_rx_st3_prefix              (_connected_to_ip2uio_rx_st3_prefix_),              //  output,   width = 32,               .prefix
		.ip2uio_rx_st3_prefix_parity       (_connected_to_ip2uio_rx_st3_prefix_parity_),       //  output,    width = 1,               .prefix_parity
		.ip2uio_rx_st3_RSSAI_prefix        (_connected_to_ip2uio_rx_st3_RSSAI_prefix_),        //  output,   width = 12,               .RSSAI_prefix
		.ip2uio_rx_st3_RSSAI_prefix_parity (_connected_to_ip2uio_rx_st3_RSSAI_prefix_parity_), //  output,    width = 1,               .RSSAI_prefix_parity
		.ip2uio_rx_st3_pvalid              (_connected_to_ip2uio_rx_st3_pvalid_),              //  output,    width = 2,               .pvalid
		.ip2uio_rx_st3_bar                 (_connected_to_ip2uio_rx_st3_bar_),                 //  output,    width = 3,               .bar
		.ip2uio_rx_st3_vfactive            (_connected_to_ip2uio_rx_st3_vfactive_),            //  output,    width = 1,               .vfactive
		.ip2uio_rx_st3_vfnum               (_connected_to_ip2uio_rx_st3_vfnum_),               //  output,   width = 11,               .vfnum
		.ip2uio_rx_st3_pfnum               (_connected_to_ip2uio_rx_st3_pfnum_),               //  output,    width = 3,               .pfnum
		.ip2uio_rx_st3_chnum               (_connected_to_ip2uio_rx_st3_chnum_),               //  output,    width = 1,               .chnum
		.ip2uio_rx_st3_misc_parity         (_connected_to_ip2uio_rx_st3_misc_parity_),         //  output,    width = 1,               .misc_parity
		.ip2uio_rx_st3_empty               (_connected_to_ip2uio_rx_st3_empty_),               //  output,    width = 3,               .empty
		.uio2ip_rx_st_Hcrdt_update         (_connected_to_uio2ip_rx_st_Hcrdt_update_),         //   input,    width = 3,      usr_rx_st.Hcrdt_update
		.uio2ip_rx_st_Hcrdt_ch             (_connected_to_uio2ip_rx_st_Hcrdt_ch_),             //   input,    width = 1,               .Hcrdt_ch
		.uio2ip_rx_st_Hcrdt_update_cnt     (_connected_to_uio2ip_rx_st_Hcrdt_update_cnt_),     //   input,    width = 6,               .Hcrdt_update_cnt
		.uio2ip_rx_st_Hcrdt_init           (_connected_to_uio2ip_rx_st_Hcrdt_init_),           //   input,    width = 3,               .Hcrdt_init
		.ip2uio_rx_st_Hcrdt_init_ack       (_connected_to_ip2uio_rx_st_Hcrdt_init_ack_),       //  output,    width = 3,               .Hcrdt_init_ack
		.uio2ip_rx_st_Dcrdt_update         (_connected_to_uio2ip_rx_st_Dcrdt_update_),         //   input,    width = 3,               .Dcrdt_update
		.uio2ip_rx_st_Dcrdt_ch             (_connected_to_uio2ip_rx_st_Dcrdt_ch_),             //   input,    width = 1,               .Dcrdt_ch
		.uio2ip_rx_st_Dcrdt_update_cnt     (_connected_to_uio2ip_rx_st_Dcrdt_update_cnt_),     //   input,   width = 12,               .Dcrdt_update_cnt
		.uio2ip_rx_st_Dcrdt_init           (_connected_to_uio2ip_rx_st_Dcrdt_init_),           //   input,    width = 3,               .Dcrdt_init
		.ip2uio_rx_st_Dcrdt_init_ack       (_connected_to_ip2uio_rx_st_Dcrdt_init_ack_),       //  output,    width = 3,               .Dcrdt_init_ack
		.ip2uio_bus_number                 (_connected_to_ip2uio_bus_number_),                 //  output,    width = 8,            uio.usr_bus_number
		.ip2uio_device_number              (_connected_to_ip2uio_device_number_)               //  output,    width = 5,               .usr_device_number
	);

